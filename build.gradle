apply plugin: 'java'
apply plugin: 'scala'

version = '1.0'

if (!hasProperty('against')) {
    ext.against = 'dse'    // default
}

def Home = System.env.HOME
def DseHome = System.env.DSE_HOME ?: "$Home/dse"
def DseResources = System.env.DSE_RESOURCES ?: "$Home/dse/resources/"
def mainClassName = "com.datastax.sparkstress.SparkCassandraStress"

// Parameters for buliding against Maven Libs
def ConnectorVersion = System.env.CONNECTOR_VERSION ?: '1.2.0-rc2'
def SparkVersion = System.env.SPARK_VERSION ?: '1.2.1'

// Parameter for building against Connector Repository
def SparkCCHome = System.env.SPARKCC_HOME ?:
        "$Home/repos/spark-cassandra-connector/"

def deps = [
        dse   : {
            println "Using DSE libraries"
            [
                    'dse/lib',
                    'driver/lib',
                    'cassandra/lib',
                    'spark/lib',
                    'shark/lib',
                    'hadoop',
                    'hadoop/lib',
            ].each { dir ->
                provided fileTree(dir: "$DseResources/$dir", include: '*.jar')
            }

            [
                    '/build',
                    '/lib',
                    '/build/lib'
            ].each { dir ->
                provided fileTree(dir: "$DseHome/$dir", include: '*.jar')
            }
        },
        maven : {
            println "Using Maven Libraries"

            compile "com.datastax.spark:spark-cassandra-connector_2.10:$ConnectorVersion"
            provided "org.apache.spark:spark-core_2.10:$SparkVersion"
        },
        source: {
            println "Using Assembly Jar from Source Repo"

            compile fileTree(dir: "$SparkCCHome/spark-cassandra-connector/target/scala-2.10/", include: "*.jar")
            provided "org.apache.spark:spark-core_2.10:$SparkVersion"

        }
]

task build_connector(type: Exec) {
    workingDir SparkCCHome
    commandLine 'sbt/sbt', 'clean'
    commandLine 'sbt/sbt', 'assembly'
}

if (against == 'source') {
    jar.dependsOn build_connector
}


jar {
    manifest.attributes("Main-Class": mainClassName)
    baseName = "SparkCassandraStress"
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

ext {
    scalaVersion = '2.10.4'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "com.github.scopt:scopt_2.10:3.2.0"
    println "Checking dependency flag: $against"

}

dependencies deps[(against)]

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala']
            if (against == 'dse') {
                srcDirs += 'src/dse'
            } else {
                srcDirs += 'src/apache'
            }
        }
    }
}
